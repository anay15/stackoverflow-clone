version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: stackoverflow_clone_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=ecto://postgres:postgres@db:5432/stackoverflow_clone_dev
      - PHX_HOST=localhost
      - PORT=4000
      - STACKEXCHANGE_KEY=${STACKEXCHANGE_KEY:-}
      - OLLAMA_URL=${OLLAMA_URL:-}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        mix deps.get &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix phx.server
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
